#ifndef __TYPEDEF__
#define __TYPEDEF__

#pragma warning(disable: 4100)

#include <Ntifs.h>
#include <ntddk.h>

#define driverName L"\\Device\\GDriver"
#define dosDeviceName L"\\DosDevices\\GDriver"

#define IOCTL_GDRIVER_OPENFILES CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800, METHOD_BUFFERED, FILE_READ_DATA | FILE_WRITE_DATA)
#define IOCTL_GDRIVER_TERMINATEPROCESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_BUFFERED, FILE_READ_DATA | FILE_WRITE_DATA)
#define IOCTL_GDRIVER_HIDEPROCESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_BUFFERED, FILE_READ_DATA | FILE_WRITE_DATA)
#define IOCTL_GDRIVER_PROTECTPROCESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803, METHOD_BUFFERED, FILE_READ_DATA | FILE_WRITE_DATA)

typedef NTSTATUS(NTAPI *_NtQuerySystemTime)(PLARGE_INTEGER);
typedef NTSTATUS(NTAPI *_NtQuerySystemInformation)(SYSTEM_INFORMATION_CLASS, PVOID, ULONG, PULONG);
typedef NTSTATUS(NTAPI *_NtOpenProcess)(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, PCLIENT_ID);
typedef NTSTATUS(NTAPI *_NtTerminateProcess)(HANDLE, NTSTATUS);
typedef NTSTATUS(NTAPI *_NtDuplicateObject)(HANDLE, PHANDLE, HANDLE, PHANDLE, ACCESS_MASK, BOOLEAN, ULONG);
typedef NTSTATUS(NTAPI *_NtQueryObject)(HANDLE, ULONG, PVOID, ULONG, PULONG);
typedef NTSTATUS(NTAPI *_NtClose)(HANDLE);

typedef struct _KILLPROCESS {
	ULONG pid[256];
	ULONG num;
	UCHAR status[256]; //tell usermode app the status of termination
} KILLPROCESS, *PKILLPROCESS;

typedef struct _HIDEPROCESS {
	ULONG pid[256];
	ULONG num;
} HIDEPROCESS, *PHIDEPROCESS;

typedef struct _PROTECTPROCESS {
	ULONG pid[256];
	ULONG num;
} PROTECTPROCESS, *PPROTECTPROCESS;

typedef struct _DEVICE_CONTROL_DATA {
	PVOID64 address;
	LONG pid;
	LONG type;
	USHORT handle;
} DEVICE_CONTROL_DATA;

typedef struct _FILE_INFO {
	wchar_t filename[260];
	ULONG uType;
} FILE_INFO;

typedef struct _OBJECT_TYPE_INFORMATION {
	UNICODE_STRING TypeName;
	ULONG Reserved[22];    // reserved for internal use
} OBJECT_TYPE_INFORMATION, *POBJECT_TYPE_INFORMATION;

typedef NTSTATUS(NTAPI *NTPROC)();
typedef NTPROC *PNTPROC;

typedef struct _SYSTEM_SERVICE_TABLE {
	PNTPROC ServiceTable;
	PULONG CounterTable;
	ULONG ServiceLimit;
	PUCHAR ArgumentTable;
} SYSTEM_SERVICE_TABLE, *PSYSTEM_SERVICE_TABLE;

typedef struct _SERVICE_DESCRIPTOR_TABLE {
	SYSTEM_SERVICE_TABLE ntoskrnl;
	SYSTEM_SERVICE_TABLE win32k;
	SYSTEM_SERVICE_TABLE Table3;
	SYSTEM_SERVICE_TABLE Table4;
}SERVICE_DESCRIPTOR_TABLE, *PSERVICE_DESCRIPTOR_TABLE;

typedef struct _SYSTEM_HANDLE {
	ULONG ProcessId;
	UCHAR ObjectTypeNumber;
	UCHAR Flags;
	USHORT Handle;
	PVOID64 Object;
	ACCESS_MASK GrantedAccess;
} SYSTEM_HANDLE, *PSYSTEM_HANDLE;

typedef struct _SYSTEM_HANDLE_INFORMATION {
	ULONG HandleCount;
	SYSTEM_HANDLE Handles[1];
} SYSTEM_HANDLE_INFORMATION, *PSYSTEM_HANDLE_INFORMATION;

#endif